// MFP - Miulti-Function Printers and scanners toolkit
// Cgo binding for Avahi
//
// Copyright (C) 2024 and up by Alexander Pevzner (pzz@apevzner.com)
// See LICENSE for license terms and conditions
//
// Avahi browse events
//
//go:build linux || freebsd

package avahi

// #include <avahi-client/client.h>
import "C"

// BrowserEvent is the CGo representation of [AvahiBrowserEvent].
//
// [AvahiBrowserEvent]: https://avahi.org/doxygen/html/defs_8h.html#af7ff3b95259b3441a282b87d82eebd87
type BrowserEvent int

// BrowserEvent values:
const (
	// New object discovered on the network.
	BrowserNew BrowserEvent = C.AVAHI_BROWSER_NEW

	// The object has been removed from the network.
	BrowserRemove BrowserEvent = C.AVAHI_BROWSER_REMOVE

	// One-time event, to notify the user that all entries from
	// the cache have been sent.
	BrowserCacheExhausted BrowserEvent = C.AVAHI_BROWSER_CACHE_EXHAUSTED

	// One-time event, to hint the user that more records
	// are unlikely to be shown in the near feature.
	BrowserAllForNow BrowserEvent = C.AVAHI_BROWSER_ALL_FOR_NOW

	// Browsing failed with a error.
	BrowserFailure BrowserEvent = C.AVAHI_BROWSER_FAILURE
)

// DomainBrowserEvent represents events, generated by the
// [DomainBrowser].
type DomainBrowserEvent struct {
	Event    BrowserEvent      // Event code
	IfIndex  IfIndex           // Network interface index
	Protocol Protocol          // Network protocol
	Err      ErrCode           // In a case of BrowserFailure
	Flags    LookupResultFlags // Lookup flags
	Domain   string            // Domain name
}

// RecordBrowserEvent represents events, generated by the
// [RecordBrowser].
type RecordBrowserEvent struct {
	Event    BrowserEvent      // Event code
	IfIndex  IfIndex           // Network interface index
	Protocol Protocol          // Network protocol
	Err      ErrCode           // In a case of BrowserFailure
	Name     string            // Record name
	Class    DNSClass          // Record DNS class
	Type     DNSType           // Record DNS type
	Data     []byte            // Record data
	Flags    LookupResultFlags // Lookup flags
}
